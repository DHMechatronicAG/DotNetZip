<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
         DefaultTargets="CompileAll"
         ToolsVersion="3.5"
         >

  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />


   <PropertyGroup>
      <Optimize>false</Optimize>
      <DebugSymbols>true</DebugSymbols>
      <!-- <OutputPath>.\bin</OutputPath>  -->
      <OutputPath>.\</OutputPath>
      <OutDir>.\</OutDir>
      <IntermediateOutputPath>.\obj</IntermediateOutputPath>
   </PropertyGroup>

  <!-- specify reference assemblies for all builds in this project -->
  <ItemGroup>
    <Reference Include="mscorlib" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.Linq" />                   <!-- LINQ -->
    <!--Reference Include="System.ServiceModel" /-->           <!-- WCF -->
    <!--Reference Include="System.ServiceModel.Web" /-->       <!-- WCF -->
    <!--Reference Include="System.Runtime.Serialization" /-->  <!-- WCF -->
  </ItemGroup>

  <!-- This ItemGroup includes every .cs source file in the directory,           -->
  <!-- except for the one indicated by OriginalSourceFile.  In flymake, that     -->
  <!-- property indicates the currently edited file. So the result is that the   -->
  <!-- ItemGroup CSFile will include all files, including the _flymake.cs clone, -->
  <!-- but not including the original file.  Which is what we want.              -->
  <ItemGroup>
    <CSFile Include="*.cs" Exclude="$(OriginalSourceFile)" />
  </ItemGroup>

  <Target Name="CheckSyntax"
          DependsOnTargets="ResolveAssemblyReferences"
          >
    <!-- Run the Visual C# compilation on the specified set of .cs files. -->
    <CSC 
       Sources="@(CSFile)"
       References="@(ReferencePath)"
       TargetType="module"
       Toolpath="$(MSBuildToolsPath)"
       Nologo="true"
       />
  </Target>

</Project>
